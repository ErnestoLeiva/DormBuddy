@model DormBuddy.Models.UserProfile
@inject DormBuddy.Models.TimeZoneService TimeZoneService

@{
    ViewData["Title"] = "Profile";
    string FriendshipStatus = ViewData["FriendshipStatus"]?.ToString() ?? "";
    int FriendCount = ViewData["FriendCount"] as int? ?? 0;
    List<UserProfile> Friends = (ViewData["Friends"] as List<UserProfile>) ?? new List<UserProfile>();
    List<Profile_PostsModel> Posts = (ViewData["Posts"] as List<Profile_PostsModel>) ?? new List<Profile_PostsModel>();
    List<Profile_PostsModel> Posts_Reply = (ViewData["Posts_Reply"] as List<Profile_PostsModel>) ?? new List<Profile_PostsModel>();
    string timezone = (ViewData["CurrentTimeZone"] as string) ?? "UTC";
}

<div class="profile-top-wrapper">   

    <!-- Banner Section -->
    <div class="banner-section">
        <img src="@Model.BannerImageUrl" alt="Banner Image" class="banner-image"/>
        
    </div>

    <!-- Return to Dashboard Button -->
    <div class="mb-4">
        <a href="/Account/Dashboard" class="btn btn-primary">
            <i class="fa fa-chevron-left"></i> Return to Dashboard
        </a>
    </div>

    @if (User?.Identity?.Name == Model.User?.UserName)
    {
        <div class="text-right mb-4">
            <a class="btn btn-primary" href="Settings?page=ProfileSettings" style="height:38px;">
                <i class="fas fa-cog"></i> Configuration
            </a>
            <a class="btn btn-primary" href="" style="height:30px; opacity:0;"></a>
        </div>
    }

    <!-- Profile Image Section -->
    <div class="profile-image-container text-center">
        <div class="profile-image-border">
            <img src="@Model.ProfileImageUrl" alt="Profile Image" class="profile-image">
        </div>
    </div>

</div>

<!-- Profile Information Section -->
<div class="container" style="padding-top:300px;">
    <div class="row">
        <!-- Left Column: Basic Profile Information -->
        <div class="col-md-4 profile-info">
            <h3>@Model.User?.FirstName @Model.User?.LastName
                @if (Model.Verified) {
                    <img src="https://i.imgur.com/rtkll8v.png" style="width:65px; height: 65px;" />
                }
            </h3>
            <p class="text-muted">@@@Model.User?.UserName</p>
            @if (FriendshipStatus != "blocked" && FriendshipStatus != "blocked_me") {
                <p>
                    <span class="status-box @(ViewData["profile_online_status"]?.ToString() == "Online" ? "online" : "offline")">
                        @ViewData["profile_online_status"]
                    </span>
                </p>
                <h5>Bio</h5>
                <p>@Model.Bio</p>
            }

            @if (User?.Identity?.Name != Model.User?.UserName )
            {
                var fstatus = (string)FriendshipStatus;
            <!-- Add/Remove/Block/Unblock buttons go here -->
            <div style="display: flex; justify-content: left; gap: 15px; padding-left:5%;">
                
                <!-- check for pending -->

                @if (fstatus == "blocked") {
                    <button class="btn btn-success"
                        data-url="@Url.Action("UnblockUser", "imgur", new { target = Model.User?.UserName })"
                        onclick="navigateToFriendAction(this)">
                        Unblock
                    </button>
                } else if (fstatus == "friends") {
                    <button class="btn btn-success"
                        data-url="@Url.Action("RemoveFriend", "imgur", new { target = @Model.User?.UserName })"
                        onclick="navigateToFriendAction(this)">
                        Unfriend
                    </button>
                   <button class="btn btn-success"
                        data-url="@Url.Action("BlockUser", "imgur", new { target = Model.User?.UserName })"
                        onclick="navigateToFriendAction(this)">
                        Block
                    </button>
                } else if (fstatus == "not friends") {
                    <button class="btn btn-success"
                        data-url="@Url.Action("AddFriend", "imgur", new { target = Model.User?.UserName })"
                        onclick="navigateToFriendAction(this)">
                        Add
                    </button>
                    <button class="btn btn-success"
                        data-url="@Url.Action("BlockUser", "imgur", new { target = Model.User?.UserName })"
                        onclick="navigateToFriendAction(this)">
                        Block
                    </button>
                } else if (fstatus == "pending_accept") {
                    <form action="@Url.Action("AcceptOrDenyPending", "imgur", new { target = Model.User?.UserName, type="accept", targetCtrl = "Profile" })", method="post">
                        <button type="submit" class="btn btn-success">Accept</button>
                    </form>
                    <form action="@Url.Action("AcceptOrDenyPending", "imgur", new { target = Model.User?.UserName, type="deny", targetCtrl = "Profile" })", method="post">
                        <button type="submit" class="btn btn-success">Deny</button>
                    </form>
                } else if (fstatus == "pending_other") {
                    <form action="@Url.Action("AcceptOrDenyPending", "imgur", new { target = Model.User?.UserName, type="cancel", targetCtrl = "Profile" })", method="post">
                        <button type="submit" class="btn btn-success">Remove Req.</button>
                    </form>
                    <button class="btn btn-success"
                        data-url="@Url.Action("BlockUser", "imgur", new { target = Model.User?.UserName })"
                        onclick="navigateToFriendAction(this)">
                        Block
                    </button>
                }

                <script>
                    function navigateToFriendAction(button) {
                        const url = button.getAttribute('data-url');

                        // Perform navigation or AJAX
                        if (url) {
                            // Option 1: Redirect to the URL
                            window.location.href = url;
                        } else {
                            console.error('No URL provided.');
                        }
                    }
                </script>

                
            </div>
            }

            @if (FriendshipStatus != "blocked" && FriendshipStatus != "blocked_me") {
            <!-- Friends Section -->
            <div class="friends-section mt-4">
                <h4>Friends (@ViewData["FriendCount"]) </h4>
                <div class="friends-list" style="background-color: lightgray; width: 100%; height: 250px; border-radius: 10px; display: flex; flex-wrap: wrap; overflow-y: auto; padding: 10px;">
                    @if (FriendCount < 1) {
                        <span style="text-align: center;">Currently no friends!</span>
                    } else {    
                        foreach (var friend in Friends)
                        {
                            <div class="friend-card" data-username="@friend.User?.UserName" 
                                style="background-color: white; cursor:pointer; border: 1px solid #ccc; border-radius: 20px; width: 33%; height: 33%; display: flex; justify-content: center; align-items: center; font-size: 14px; position: relative;">
                                <img src="@friend.ProfileImageUrl" 
                                    style="width: 100%; height: 100%; z-index: 1; position: absolute; border-radius: 20px;" />
                                <p style="z-index: 2; position: relative; background-color: rgba(255, 255, 255, 0.7); padding: 2px 5px; border-radius: 5px; bottom:-40px;">@friend.User?.UserName</p>
                            </div>
                        }
                    }
                </div>

                <div class="view-friends-button" style="margin-top: 10px; text-align: center; width: 100%;">
                    <button class="btn btn-primary ViewAllFriends">View All Friends</button>
                </div>

            </div>

            }
        </div>

        <!-- Right Column: Tabs Section -->
        <div class="col-md-8">

            @if (((Model.ProfileVisibleToPublic == true && FriendshipStatus != "blocked" && FriendshipStatus != "blocked_me") && User?.Identity?.Name != Model.User?.UserName) || User?.Identity?.Name == Model.User?.UserName) {

            <ul class="nav nav-tabs" id="profileTabs" role="tablist">
                <li class="nav-item">
                    <button class="nav-link active" id="posts-tab" data-bs-toggle="tab" data-bs-target="#posts" type="button" role="tab" aria-controls="posts" aria-selected="true">
                        <i class="fas fa-pencil-alt"></i> Posts
                    </button>
                </li>
                <li class="nav-item">
                    <button class="nav-link" id="about-tab" data-bs-toggle="tab" data-bs-target="#about" type="button" role="tab" aria-controls="about" aria-selected="false">
                        <i class="fas fa-info-circle"></i> About
                    </button>
                </li>
                <li class="nav-item">
                    <button class="nav-link" id="friends-tab" data-bs-toggle="tab" data-bs-target="#friends" type="button" role="tab" aria-controls="friends" aria-selected="false">
                        <i class="fas fa-user-friends"></i> View Friends
                    </button>
                </li>
            </ul>
            <div class="tab-content mt-3" id="profileTabsContent">
                <!-- Posts Tab -->
                <div class="tab-pane fade show active" id="posts" role="tabpanel" aria-labelledby="posts-tab">
                    <!-- Create Post Section -->
                    <div class="mb-3">
                        <form asp-controller="imgur" asp-action="ProfilePostArea" method="post">
                            <textarea name="message" class="form-control" id="createPostTextarea" rows="3" placeholder="What's on your mind?"></textarea>
                            <input type="hidden" name="Reply_Id" value="-1" />
                            <input type="hidden" name="targetUsername" value="@Model.User?.UserName" />
                            <div class="text-end mt-2">
                                <button type="submit" class="btn btn-primary">
                                    <i class="fas fa-paper-plane"></i> Post
                                </button>
                            </div>
                        </form>
                    </div>

                    <!-- Posts Section -->
                    <div id="postsSection">
                        @foreach (var post in Posts)
                        {
                            <div class="card mb-3" id="post-@post.Id">
                                <div class="card-body">
                                    <h6 class="card-title">@post.User?.UserName</h6>
                                    <p class="card-text">@post.Message</p>
                                    <small class="text-muted">Posted @TimeZoneService.getCurrentTimeFromUTC(post.CreatedAt, timezone).ToString("g")</small>

                                    <!-- Reply Button -->
                                    <div class="d-flex justify-content-start mt-2">
                                        <button class="btn btn-outline-primary btn-sm reply-btn" data-post-id="@post.Id">
                                            <i class="fas fa-reply"></i> Reply
                                        </button>
                                    </div>

                                    <!-- Reply Textbox (hidden initially) -->
                                    <div class="reply-box mt-2" id="reply-box-@post.Id" style="display: none;">
                                        <form asp-controller="imgur" asp-action="ProfilePostArea" method="post">
                                            <textarea name="message" class="form-control" rows="2" placeholder="Write your reply here..."></textarea>
                                            <input type="hidden" name="Reply_Id" value="@post.Id" />
                                            <input type="hidden" name="targetUsername" value="@Model.User?.UserName" />
                                            <div class="text-end mt-2">
                                                <button type="submit" class="btn btn-primary btn-sm">
                                                    <i class="fas fa-paper-plane"></i> Submit
                                                </button>
                                            </div>
                                        </form>
                                    </div>

                                    <!-- Replies Section -->
                                    <div class="replies mt-3" id="replies-for-@post.Id">
                                        @foreach (var reply in Posts_Reply)
                                        {
                                            if (reply.Reply_Id == post.Id) {
                                                <div class="card mb-2 ms-3">
                                                    <div class="card-body">
                                                        <h6 class="card-title">@reply.User?.UserName</h6>
                                                        <p class="card-text">@reply.Message</p>
                                                        <small class="text-muted">Replied @TimeZoneService.getCurrentTimeFromUTC(reply.CreatedAt, timezone).ToString("g")</small>
                                                    </div>
                                                </div>
                                            }
                                        }
                                    </div>
                                </div>
                            </div>
                        }
                    </div>

                </div>

            <script>
                $(document).ready(function () {
                    // Toggle reply box visibility on button click
                    $('.reply-btn').on('click', function () {
                        const postId = $(this).data('post-id');
                        $(`#reply-box-${postId}`).toggle(); // Show or hide the reply box
                    });
                });
            </script>

                <!-- About Tab -->
                <div class="tab-pane fade" id="about" role="tabpanel" aria-labelledby="about-tab">
                    <div class="table-responsive">
                        <table class="table table-bordered">
                            <thead class="thead-light">
                                <tr>
                                    <th colspan="2" class="text-center">Personal Information</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <th>Email</th>
                                    <td>@Model.User?.Email</td>
                                </tr>
                                <tr>
                                <th>Date of Birth</th>
                                    <td>@(Model.DateOfBirth.HasValue ? Model.DateOfBirth.Value.ToString("yyyy-MM-dd") : "Not Provided")</td>
                                </tr>

                                <tr>
                                    <th>Preferred Language</th>
                                    <td>@Model.Preferred_Language</td>
                                </tr>
                                <tr>
                                    <th>Profile Visibility</th>
                                    <td>@(Model.ProfileVisibleToPublic ? "Public" : "Private")</td>
                                </tr>
                                <tr>
                                    <th>Biography</th>
                                    <td>@Model.Bio</td>
                                </tr>
                            </tbody>
                            <thead class="thead-light">
                                <tr>
                                    <th colspan="2" class="text-center">Professional Information</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <th>Job Title</th>
                                    <td>@Model.JobTitle</td>
                                </tr>
                                <tr>
                                    <th>Company Name</th>
                                    <td>@Model.CompanyName</td>
                                </tr>
                                <tr>
                                    <th>School Name</th>
                                    <td>@Model.SchoolName</td>
                                </tr>
                            </tbody>
                            <thead class="thead-light">
                                <tr>
                                    <th colspan="2" class="text-center">Social Links</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <th>Facebook</th>
                                    <td>@(string.IsNullOrWhiteSpace(Model.FacebookUrl) ? "Not Provided" : Html.Raw($"<a href=\"{Model.FacebookUrl}\" target=\"_blank\">{Model.FacebookUrl}</a>"))</td>
                                </tr>
                                <tr>
                                    <th>Twitter</th>
                                    <td>@(string.IsNullOrWhiteSpace(Model.TwitterUrl) ? "Not Provided" : Html.Raw($"<a href=\"{Model.TwitterUrl}\" target=\"_blank\">{Model.TwitterUrl}</a>"))</td>
                                </tr>
                                <tr>
                                    <th>LinkedIn</th>
                                    <td>@(string.IsNullOrWhiteSpace(Model.LinkedInUrl) ? "Not Provided" : Html.Raw($"<a href=\"{Model.LinkedInUrl}\" target=\"_blank\">{Model.LinkedInUrl}</a>"))</td>
                                </tr>
                                <tr>
                                    <th>Instagram</th>
                                    <td>@(string.IsNullOrWhiteSpace(Model.InstagramUrl) ? "Not Provided" : Html.Raw($"<a href=\"{Model.InstagramUrl}\" target=\"_blank\">{Model.InstagramUrl}</a>"))</td>
                                </tr>
                            </tbody>
                            <thead class="thead-light">
                                <tr>
                                    <th colspan="2" class="text-center">Account Details</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <th>Last Login</th>
                                    <td>@ViewData["AdjustedLastLogin"]</td>
                                </tr>
                                <tr>
                                    <th>Account Status</th>
                                    <td>@Model.Verified</td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>

                <div class="tab-pane fade" id="friends" role="tabpanel" aria-labelledby="friends-tab">
                    <div class="friend-container" style="display: flex; flex-wrap: wrap; gap: 10px; padding: 10px;">
                        @foreach (var friend in Friends)
                        {
                            <div class="friend-card" data-username="@friend?.User?.UserName" 
                                style="background-color: white; cursor: pointer; border: 1px solid #ccc; border-radius: 20px; width: 150px; height: 150px; display: flex; justify-content: center; align-items: center; font-size: 14px; position: relative;">
                                <img src="@friend?.ProfileImageUrl" 
                                    style="width: 100%; height: 100%; z-index: 1; position: absolute; border-radius: 20px;" />
                                <p style="z-index: 2; position: relative; background-color: rgba(255, 255, 255, 0.7); padding: 2px 5px; border-radius: 5px; bottom:-65px;">@friend?.User?.UserName</p>
                            </div>
                        }
                    </div>
                </div>


            </div>

            

            } else {
                
                if ((string)FriendshipStatus != "blocked" && FriendshipStatus != "blocked_me") {
                    <h2 style="margin: 120px 0px 0px 50px;">Profile is set to not be visible to the public!</h2>
                } else {
                    <h2 style="margin: 120px 0px 0px 50px;">Your are not allowed to view this page!</h2>
                }
            }

            
        </div>


        <!-- #ENDOFTABS -->
    </div>
</div>

@section Scripts {
    <script>
    $(document).ready(function () {
        // Use event delegation to handle clicks on dynamically generated elements
        $(document).on("click", ".friend-card", function () {
            let uname = $(this).data("username");
            window.location.href = "profile?username=" + uname;
        });

        $(document).on("click", ".ViewAllFriends", function() {
            $('button[data-bs-target="#friends"]').tab('show');
        });
    });
    </script>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
}


<style>
    .status-box {
        display: inline-block;
        padding: 5px 10px;
        border-radius: 5px;
        font-weight: bold;
        color: white;
        text-align: center;
    }

    .status-box.online {
        background-color: green;
    }

    .status-box.offline {
        background-color: red;
    }
</style>

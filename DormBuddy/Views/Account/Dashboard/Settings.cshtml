@{
    ViewData["Title"] = "Settings";
}   

<link rel="stylesheet" href="~/css/settings.css" asp-append-version="true" />

<div class="settings-container fade-in">
    <div class="settings-header text-center mb-4">
        <h1><i class="fas fa-cog"></i></h1>
        <h1 class="display-4">Settings</h1>
        <p>Update your account information and preferences.</p>
    </div>

    <!-- Navigation Buttons -->
    <div id="navigationButtons">
        <button id="general-settings-btn" 
                class="settings-btn" 
                onclick="loadSettings('GeneralSettings')">
            <i class="fas fa-sliders-h me-2"></i>
            General Settings
        </button>
        <button id="account-settings-btn" 
                class="settings-btn" 
                onclick="loadSettings('AccountSettings')">
            <i class="fas fa-user-cog me-2"></i>
            Account Settings
        </button>
        <button id="privacy-settings-btn" 
                class="settings-btn" 
                onclick="loadSettings('PrivacySettings')">
            <i class="fas fa-shield-alt me-2"></i>
            Privacy Settings
        </button>
        <button id="profile-settings-btn" 
                class="settings-btn" 
                onclick="loadSettings('ProfileSettings')">
            <i class="fas fa-id-card me-2"></i>
            Profile Settings
        </button>
    </div>

    <!-- Content Area -  -->
    <div id="settings-content">
        
    </div>
</div>

@section Scripts {
    <script type="text/javascript">
        document.addEventListener('DOMContentLoaded', function() {
            loadSettings('GeneralSettings');
            
            
            setButtonStyles();
        });

        function setButtonStyles() {
            const buttonStyles = {
                'general-settings-btn': 'rgb(89, 199, 226)',
                'account-settings-btn': 'rgb(255, 79, 152)',
                'privacy-settings-btn': 'rgb(154, 154, 240)',
                'profile-settings-btn': 'rgb(180, 150, 100)'
            };

            Object.entries(buttonStyles).forEach(([buttonId, color]) => {
                const button = document.getElementById(buttonId);
                if (button) {
                    button.style.backgroundColor = color;
                    button.style.color = 'white';
                    button.style.border = 'none';
                }
            });
        }

        function updateActiveButton(activeButton) {
            $('#navigationButtons button').each(function() {
                $(this).css('opacity', '.8'); 
            });
            $(activeButton).css('opacity', '1.0'); 
        }

        function loadSettings(page) {

            var urlParams = new URLSearchParams(window.location.search);

            // Default empty string for errorMessage
            var errorMessage = "";

            // Check if 'errorMessage' exists in the query string
            if (urlParams.has('errorMessage')) {
                errorMessage = urlParams.get('errorMessage');
            }

            $.ajax({
                url: '@Url.Action("LoadSettings")',
                type: 'GET',
                data: { settingsPage: page, errorMessage: errorMessage },
                cache: false,
                success: function (data) {
                    $('#settings-content').html(data);
                    $(window).trigger('resize');
                    
                    let pageName = page.toLowerCase().replace("settings", "");
                    updateActiveButton('#' + pageName + '-settings-btn');
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    alert("Error loading settings. Status: " + textStatus + ", Error: " + errorThrown);
                }
            });
        }

        // Initially load settings based on ViewBag.LoadPage
        $(document).ready(function() {
            var initialPage = '@ViewBag.LoadPage';
            if (initialPage) {
                loadSettings(initialPage);
            } else {
                loadSettings('GeneralSettings');
            }
        });
    </script>
}
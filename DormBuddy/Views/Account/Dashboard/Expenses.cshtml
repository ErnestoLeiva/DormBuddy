@model Tuple<List<DormBuddy.Models.ExpenseModel>, DormBuddy.Models.ExpenseModel>

@{
    ViewData["Title"] = "Expense Splitting";
    var expenses = Model?.Item1 ?? new List<DormBuddy.Models.ExpenseModel>(); // Initialize as empty list if null
    var newExpense = Model?.Item2 ?? new DormBuddy.Models.ExpenseModel(); // Initialize new instance if null
}

<!-- Return to Dashboard Button -->
<div class="mb-4">
    <a href="/Account/Dashboard" class="btn btn-outline-primary">
        <i class="fa fa-chevron-left"></i> Return to Dashboard
    </a>
</div>

<div class="text-center mb-4">
    <h1 class="display-4">Expense Splitting</h1>
    <p>Track shared expenses and manage balance with dormmates.</p>
</div>

<!-- Display success message if it exists -->
@if (TempData["message"] != null)
{
    <div class="alert alert-success">
        @TempData["message"]
    </div>
}
<!-- Display error message if it exists -->
@if (TempData["error"] != null)
{
    <div class="alert alert-danger">
        @TempData["error"]
    </div>
}

<!-- Expense Form to Add New Expense -->
<div class="container mb-4">
    <h4>Add New Expense</h4>
    <form method="post" asp-action="AddExpense" asp-controller="Expenses">
        <input type="hidden" id="UserId" name="UserId" value="@newExpense.UserId" />
        
        <div class="form-group">
            <label for="expenseName">Expense Name</label>
            <input type="text" class="form-control" id="expenseName" name="ExpenseName" placeholder="Enter expense name" required />
        </div>
        <div class="form-group">
            <label for="amount">Amount</label>
            <input type="number" step="0.01" min="0.01" class="form-control" id="amount" name="Amount" placeholder="Enter amount" required />
        </div>
        <div class="form-group">
            <label for="sharedWith">Shared With</label>
            <input type="text" class="form-control" id="sharedWith" name="SharedWith" placeholder="Enter person(s) shared with" required />
        </div>
        <input type="hidden" id="date" name="Date" value="@DateTime.Now" />
        
        <button type="submit" class="btn btn-primary">Add Expense</button>
    </form>
</div>

<!-- Expense Table -->
<div class="table-responsive">
    <table class="table table-striped table-bordered" id="expenseTable">
        <thead class="thead-dark">
            <tr>
                <th>Expense Name</th>
                <th>Amount</th>
                <th>Shared With</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody id="expenseTableBody">
            @if (!expenses.Any())
            {
                <tr id="noExpensesMessage">
                    <td colspan="4" class="text-center">No current expenses...</td>
                </tr>
            }
            else
            {
                foreach (var expense in expenses)
                {
                    <tr>
                        <td>@expense.ExpenseName</td>
                        <td>@expense.Amount.ToString("C")</td>
                        <td>@expense.SharedWith</td> <!-- Display "Shared With" data -->
                        <td>
                            <button class="btn btn-danger btn-sm" data-toggle="modal" data-target="#deleteConfirmationModal" 
                                onclick="setExpenseToDelete('@expense.ExpenseName', '@expense.Id')">Delete</button>
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>
</div>


<!-- Bootstrap Modal for Confirming Expense Deletion -->
<div class="modal fade" id="deleteConfirmationModal" tabindex="-1" role="dialog" aria-labelledby="deleteConfirmationModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteConfirmationModalLabel">Confirm Deletion</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete expense "<strong id="expenseToDeleteName"></strong>"?
            </div>
            <div class="modal-footer">
                <form method="post" asp-action="DeleteExpense">
                    <input type="hidden" name="expenseId" id="expenseToDeleteId" />
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-danger">Delete</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        window.onload = function() {
            setDateToToday();
        }

        function setDateToToday() {
            const now = new Date();
            const year = now.getFullYear();
            const month = (now.getMonth() + 1).toString().padStart(2, '0');
            const day = now.getDate().toString().padStart(2, '0');
            const localDate = `${year}-${month}-${day}`;
            document.getElementById('date').value = localDate;
        }

        function setExpenseToDelete(expenseName, expenseId) {
            document.getElementById('expenseToDeleteName').innerText = expenseName;
            document.getElementById('expenseToDeleteId').value = expenseId;
        }

        // Validate Amount field to ensure it has only up to two decimal places
        document.getElementById("amount").addEventListener("input", function (event) {
            const value = event.target.value;
            const decimalPattern = /^\d+(\.\d{0,2})?$/;

            if (!decimalPattern.test(value)) {
                // Remove extra decimal places if present
                event.target.value = parseFloat(value).toFixed(2);
            }
        });
    </script>
}

